---
layout: post
title: Tutum â€” Yet another container-managment layer
excerpt: "Get rid of Heroku-like PaaS with cheaper, faster and more reliable cloud providers"
tags: [docker, digitalocean, nodejs, iojs]
modified: 2015-04-13
comments: true
feature-img: "img/sample_feature_img.png"
---
<!-- TOC depth:6 withLinks:1 updateOnSave:1 -->
	- [Containers for everybody, even for simpliest tasks](#containers-for-everybody-even-for-simpliest-tasks)
	- [The implementation of cool concept](#the-implementation-of-cool-concept)
	- [Choosing Lightweight Image](#choosing-lightweight-image)
	- [Choosing the Layer](#choosing-the-layer)
<!-- /TOC -->


## Containers for everybody, even for simplest tasks

You have developed a small and dumb application and would like to host it at some nice place with a little effort. PaaS like Heroku have been doing it for you for last years.
The problem is price, performance and managment (Buildpacks meh). For example, tryflow.org was hosted on Heroku and it's constantly failing because of strong memory consumption.
Don't forget the article is for a Fullstack Javascript developer, which main principle is basically don't worry a lot about the infrastructure.

## The implementation of cool concept

Containers technology itself isn't something new. Parallels has Virtuozzo for many years, though, community wasn't yet ready for such thing at the time.
But recently it has become a huge, huge hype, got funded, got community involved into this. And yet we have no common standard for containers.
You have raw [LXC, LXD](https://linuxcontainers.org/), CoreOS team trying [Rkt](https://github.com/coreos/rkt) and the most popular abstraction above LXC called [Docker](https://docker.io). I've choose Docker only because I've been already working with Docker since late 2013. The marketing called this "Solid Ecosystem", obviously it means almost production-ready support by many major cloud provider.

So, Docker. To install it on OS X I use Homebrew and its addon Brew-cask - a nice way to install GUI apps via command line. Boot2docker requires VirtualBox, ensure you have it installed:

```
brew install caskroom/cask/brew-cask
brew cask install virtualbox
brew install boot2docker
```
So you have Docker client and Docker server which would be executed inside VM. If you into any Linux with modern core this is a way easier since docker has single executable. But if you are forced to emulate Linux on OS X, init and start virtual machine:
```
$ boot2docker init
$ boot2docker up

Waiting for VM and Docker daemon to start...
.........................ooooooooooooooooooooooooo
Started.
Writing /Users/potomushto/.boot2docker/certs/boot2docker-vm/ca.pem
Writing /Users/potomushto/.boot2docker/certs/boot2docker-vm/cert.pem
Writing /Users/potomushto/.boot2docker/certs/boot2docker-vm/key.pem

To connect the Docker client to the Docker daemon, please set:
    export DOCKER_HOST=tcp://192.168.59.103:2376
    export DOCKER_CERT_PATH=/Users/potomushto/.boot2docker/certs/boot2docker-vm
    export DOCKER_TLS_VERIFY=1
```
Set the exports and you're ready! Yes, 8GB RAM is definitely not enough for modern front-end. web.

## Choosing Lightweight Image

Docker use the abstractions called layers to build one images on top of another. The first line of most of Dockerfile started `FROM ubuntu:12.04`, which means it use standard Ubuntu. There is a holywar about multiprocess-in-a-container vs single-process-in-a-container, which turned out as a `docker-baseimage` (Ubuntu + [Docker-specific things](https://registry.hub.docker.com/u/phusion/baseimage/)). Cool, I love Ubuntu, but do I really need the entire 300mb image for running small node.js application? Nope. I've tried some images.

```
docker pull phusion/baseimage
docker pull node
docker pull iojs:onbuild
docker pull ficusio/nodejs-base
docker pull joeandaverde/minimal-nodejs
docker images
REPOSITORY                    TAG            CREATED             VIRTUAL SIZE
ficusio/nodejs-base           latest         3 days ago          32.17 MB
iojs                          onbuild        5 days ago          700.6 MB
node                          latest         10 days ago         706.5 MB
phusion/baseimage             0.9.16         11 weeks ago        279.7 MB
phusion/baseimage             latest         11 weeks ago        279.7 MB
joeandaverde/minimal-nodejs   latest         3 months ago        28.42 MB
```

## Choosing the Layer
